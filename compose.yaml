name: ollama-webhooks
services:
  web:
    image: ghcr.io/craiga/ollama-webhooks/web:${GITHUB_SHA:-latest}
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=HostRegexp(`^.+$`)"
      - "traefik.http.routers.web.entrypoints=web"
    env_file:
      - path: .env
        required: false
      - path: docker.env
        required: true

  worker:
    image: ghcr.io/craiga/ollama-webhooks/worker:${GITHUB_SHA:-latest}
    depends_on:
      web:
        condition: service_healthy
      ollama:
        condition: service_started
    env_file:
      - path: .env
        required: false
      - path: docker.env
        required: true

  ollama:
    image: alpine/ollama
    command: serve

  db:
    image: postgres:latest
    shm_size: 128mb
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "ollama-webhooks"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      POSTGRES_USER: ollama-webhooks
      POSTGRES_PASSWORD: security-is-important
      POSTGRES_DB: ollama-webhooks
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:latest

  traefik:
    image: traefik:latest
    command:
      - "--log.nocolor=true"
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    depends_on:
      web:
        condition: service_healthy
    ports:
      - "11435:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  db-data:
